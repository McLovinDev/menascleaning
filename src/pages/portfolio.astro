---
import TransparentHeader from "../components/global/TransparentHeader.astro";
import GalleryItem from "../components/portfolio/Portolio";
import type { RootObject } from "../interfaces/dbData";
import Layout from "../layouts/Layout.astro";
const response = await fetch(import.meta.env.API_URL);
const data: RootObject = await response.json();
---

<Layout
  title={`Portfolio | ${data.name}`}
  description={data.home[0].text}
  favicon={data.logos.primary}
  featuredImage={data.logos.favicon}
  keywords={data.services.map((service) => service.title).join(", ")}
>
  <TransparentHeader title="Portfolio" image={data.gallery[4]} />
  <div
    class="md:w-[75%] mx-auto w-[95%] md:py-24 py-10 flex justify-center flex-col"
  >
    <span
      class="text-[30px] gradient-text md:text-[40px] font-bold text-[#1D1D1D] text-center py-8"
      >Our Recent Works</span
    >

    {
      data.beforeAfter.length > 0 ? (
        <div class="flex flex-wrap justify-center gap-6 pb-10">
          {data.beforeAfter.map((item) => {
            return (
              <div class="flex md:w-[40%] w-full gap-2">
                <div class="flex flex-col text-center">
                  <span class="md:text-[35px] font-bold text-[22px]">
                    Before
                  </span>
                  <img
                    src={`${item.beforeImg.images}`}
                    alt="before"
                    width={300}
                    height={300}
                    class="object-cover md:w-[300px] md:h-[300px] w-full h-full"
                  />
                </div>
                <div class="flex flex-col text-center">
                  <span class="md:text-[35px] font-bold text-[22px]">
                    After
                  </span>
                  <img
                    src={`${item.afterImg.images}`}
                    alt="before"
                    width={300}
                    height={300}
                    class="object-cover md:w-[300px] md:h-[300px] w-full h-full"
                  />
                </div>
              </div>
            );
          })}
        </div>
      ) : null
    }
    {
      data?.landingsGallery.length > 0 ? (
        <div class="flex flex-col">
          {data?.landingsGallery.map((item) => (
            <div class="flex flex-col justify-center">
              <span class="text-[30px] md:text-[40px] font-bold text-[#1D1D1D] text-center py-8">
                {item.nameLanding}
              </span>
              <GalleryItem data={{ gallery: item.imgLanding }} client:load />
            </div>
          ))}
        </div>
      ) : (
        <GalleryItem data={data} client:load />
      )
    }
    
  </div>
</Layout>